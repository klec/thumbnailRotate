<?php
/**
 * Template for block Klec_Rotate_Block_Form_Gallery
 */
$_block = $this;
/* @var $_block Mage_Adminhtml_Block_Catalog_Product_Helper_Form_Gallery_Content */
?>
<div id="<?php echo $_block->getHtmlId() ?>">
    <div class="grid">
        <div style="text-align: center">
            <img id="big_img" src="" width="500" alt="sample">
        </div>
        <div  id="image_scroller" class="hor-scroll" style="height: 170px; margin-bottom: 10px;">
            <div  id="<?php echo $_block->getHtmlId() ?>_list" class="image_wrapper" style="position: relative; height: 152px;">
                <span src="" id="<?php echo $_block->getHtmlId() ?>_template" class="template no-display" alt=""/>
            </div>
        </div>
        <span id="<?php echo $_block->getHtmlId() ?>-image-0" class="no-display">
            <span class="cell-image input a-center no-display">
                <input type="radio"  name="image" value="no_selection" />
            </span>
            <span class="cell-thumbnail input a-center no-display">
                <input type="radio"  name="thumbnail" value="no_selection" />
            </span>
            <span class="cell-small_image input a-center no-display">
                <input type="radio"  name="small_image" value="no_selection" />
            </span>
        </span>
        <?php echo $_block->getUploaderHtml() ?>
    </div>
</div>
<input type="hidden" id="<?php echo $_block->getHtmlId() ?>_save"
       name="<?php echo $_block->getElement()->getName() ?>[images]"
       value="<?php echo $_block->htmlEscape($_block->getImagesJson()) ?>"/>
<input type="hidden" id="<?php echo $_block->getHtmlId() ?>_save_image"
       name="<?php echo $_block->getElement()->getName() ?>[values]"
       value="<?php echo $_block->htmlEscape($_block->getImagesValuesJson()) ?>"/>
<script type="text/javascript">
//@todo move javascript to separate
//@todo add auto order for loaded images
Element.addMethods({
        move:function (element) {
            if (dragObject.previous() && parseInt(dragObject.previous().style.left) > parseInt(dragObject.style.left)) {
                temp = dragObject.previous();
                dragObject.previous().remove();
                dragObject.insert({'after':temp});
                dragObject.next().style.left = dragObject.next().getId() * step + "px";
            }
            if (dragObject.next() && parseInt(dragObject.next().style.left) < parseInt(dragObject.style.left)) {
                temp = dragObject.next();
                dragObject.next().remove();
                dragObject.insert({'before':temp});
                dragObject.previous().style.left = dragObject.previous().getId() * step + "px";
            }
        },
        getId:function (element) {
            images = $$('.image_wrapper IMG');
            for (var i in images) {
                if (images[i] === element) return i;
            }
            return -1;
        },
        changeopacity: function (element) {
            var object = element.style;
            var opacity = (element.removed)?20:90;
            object.opacity = ( opacity / 100 );
            object.MozOpacity = ( opacity / 100 );
            object.KhtmlOpacity = ( opacity / 100 );
            object.filter = 'alpha(opacity=' + opacity + ')';

    }
    })

    //<?php echo $_block->getJsObjectName(); ?>.updateImages = function(){alert('1');}
    var images = <?php echo $_block->getImagesJson() ?>;
    var image_wraper = $('<?php echo $_block->getHtmlId() ?>_list');
    var step = 200;
    var dragObject = {};
    RotateGallery = Class.create(Product.Gallery,{
        createImageRow: function(img) {
            image_wraper.insert(
                new Element('img', {
                    id:this.prepareId(img.file),
                    src:img.url,
                    style:'height:150px; position:absolute;',
                    value_id:img.value_id,
                    file:img.file,
                    disabled:0,
                    removed:0,
                    label:''
                }).observe('mouseover', function () {
                    $('big_img').setAttribute('src', this.readAttribute('src'));
                    this.style.zIndex = "10";
                }).observe('mouseout', function () {
                    this.style.zIndex = "0";
                }).observe('mousedown', function (e) {
                    dragObject = this;
                    dragObject.removed = this.getAttribute('removed')=="1";
                    e = fixEvent(e);
                    dragObject.downX = e.pageX;
                }).observe('mouseup', function (e) {
                    if(dragObject.style.left == dragObject.getId() * step + "px"){
                        dragObject.removed=!dragObject.removed;
                        dragObject.changeopacity();
                    }
                    dragObject.style.left = dragObject.getId() * step + "px";
                    dragObject.setAttribute('removed',(dragObject.removed)?1:0);
                    dragObject = {};
                    $('<?php echo $_block->getHtmlId() ?>_save').value = images2json();
                }).observe('mousemove', function (e) {
                    if (dragObject.downX) {
                        e = fixEvent(e);
                        dragObject.style.left = parseInt(dragObject.style.left) + e.pageX - dragObject.downX + "px";
                        dragObject.downX = e.pageX;
                        dragObject.move();
                    }
                })
            );
            this.updateImages();
        },
        updateVisualisation: function(){
            $$('.image_wrapper IMG').each(function(img, id){
                step = 200;
                img.style.left = id*step + "px";
            })
        },
        updateImages : function() {
            this.getElement('save').value = images2json();
            this.images.each( function(row) {
                if (!$(this.prepareId(row.file))) {
                    this.createImageRow(row);
                }
                this.updateVisualisation(row.file);
            }.bind(this));
        },
        prepareId : function(file) {
            if (typeof this.file2id[file] == 'undefined') {
                this.file2id[file] = this.idIncrement++;
            }
            return this.containerId + '-image-' + this.file2id[file];
        }
    });

    if (images[0]) {
        $('big_img').setAttribute('src', images[0].url);
    }

    var <?php echo $_block->getJsObjectName(); ?> = new RotateGallery('<?php echo $_block->getHtmlId() ?>', <?php echo $_block->getUploader()->getJsObjectName() ?>, <?php echo $_block->getImageTypesJson() ?>);


    function images2json() {
        var answer= [];
        $$('.image_wrapper IMG').each(function(img, id){
            answer.push({
                'value_id':(img.getAttribute('value_id')=="undefined")?null:img.getAttribute('value_id'),
                'file':img.getAttribute('file'),
                'label':img.getAttribute('label'),
                'position':id,
                'url':img.getAttribute('src'),
                'disabled':0,
                'removed':img.getAttribute('removed')
            });

        })
        return Object.toJSON(answer);
    }
    function fixEvent(e) {
        e.preventDefault ? e.preventDefault() : e.returnValue = false;
        e = e || window.event
        if (e.pageX == null && e.clientX != null) {
            var html = document.documentElement
            var body = document.body
            e.pageX = e.clientX + (html && html.scrollLeft || body && body.scrollLeft || 0) - (html.clientLeft || 0);
        }
        return e
    }


</script>
